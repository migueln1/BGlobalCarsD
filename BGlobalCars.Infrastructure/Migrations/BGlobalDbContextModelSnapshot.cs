// <auto-generated />
using System;
using BGlobalCars.Infrastructure.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BGlobalCars.Infrastructure.Migrations
{
    [DbContext(typeof(BGlobalDbContext))]
    partial class BGlobalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BGlobalCars.Core.Common.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 11, 10, 20, 2, 6, 46, DateTimeKind.Local).AddTicks(3174),
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 11, 10, 20, 2, 6, 46, DateTimeKind.Local).AddTicks(3192),
                            Name = "Nissan"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 11, 10, 20, 2, 6, 46, DateTimeKind.Local).AddTicks(3195),
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 11, 10, 20, 2, 6, 46, DateTimeKind.Local).AddTicks(3197),
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 11, 10, 20, 2, 6, 46, DateTimeKind.Local).AddTicks(3199),
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 11, 10, 20, 2, 6, 46, DateTimeKind.Local).AddTicks(3200),
                            Name = "Porsche"
                        });
                });

            modelBuilder.Entity("BGlobalCars.Core.VehicleAggregate.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<int>("Doors")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Owner")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("BGlobalCars.Core.VehicleAggregate.Vehicle", b =>
                {
                    b.HasOne("BGlobalCars.Core.Common.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });
#pragma warning restore 612, 618
        }
    }
}
